%fast marching method 
function [mask, soma]=fastMarching(detectedSoma,s1, s2, m,THR)
CC = connComp(detectedSoma);
result=cell(CC.compNum,1);
sizem=[size(s1)];
if (m==1)
    fnewsize=1.8*fsize;
else
    fnewsize=.8*fsize;
end
%fast marching
segm = 2.*s2;
segm(s2 == 0) =1;
[~, dirRationn, dirRatio_alternativenn]=dirRatio_Gaussian(double(segm), double(segm),double(fnewsize), ceil(fnewsize/10),10, .85,0); 
map=dirRatio_alternativenn./20;
for i = 1:CC.compNum
    phi = ones(size(s1));
    phi(CC.compIdx{i}) = -1;
    %define end points as the background in the segmentation
    end_pointss= find(s2==0);
    [K, L]=ind2sub(sizem,end_pointss);
    end_points=[K'; L'];
    %options.end_points=end_points;%use this one if you want 
    %the evolving stop when it reaches the end_points, In that case 
    %you need to change options.nb_iter_max to options.end_points
    %in the main file.

    %start points are boundary of detected somas
    start_pointss= find(edge(phi==-1,'canny'));
    [I,J] = ind2sub(sizem,start_pointss);
    start_points=[I';J'];
    Y=[];
    p1=1;
    nb_iter_max=10000*ceil(numel(start_pointss)); %max iteration number depend on detected area
    %nb_iter_max=Inf;
    options.nb_iter_max = nb_iter_max;
    
    [D,S] = perform_fast_marching(map,s1, start_points,end_points,nb_iter_max, options);
    S(phi==-1)=-1;
    %Si=S;
    %phi=S;
    
    %intersection = intersect(find(S<=0), end_pointss);
%     while length(intersection)<1
%         nb_iter_max= nb_iter_max+50;
%         options.nb_iter_max=nb_iter_max;
%         [D,S] = perform_fast_marching(phim,s1, start_points,end_points,nb_iter_max, options);
%         intersection = intersect(find(S<=0), end_pointss);
%         length(intersection)
%         
%     en
    
       p2 =.50; % p is the percentage of increase in contour
    o=1;
    while(p2 >0.00001)

  start_pointss= find(edge(S==-1,'canny'));
    %phim(start_points)=0;
    %phim(z)=0;
    [I,J] = ind2sub(sizem,start_pointss);
    start_points=[I';J'];
      

        %if(nb_iter_max == 100*ceil(numel(start_pointss)))

    %[D,S] = perform_fast_marching(map,s1, start_points,end_points,nb_iter_max, options);

        %end

      somaIndFirst = find((S<=0));

      intersectionFirst = intersect(somaIndFirst, find(map ~= 0));
          %start_pointss= find(edge(phi==-1,'canny'));
    %phim(start_points)=0;
    %phim(z)=0;
    %[I,J] = ind2sub(sizem,start_pointss);
    %start_points=[I';J'];


      nb_iter_max = 100*nb_iter_max +10*ceil(numel(start_pointss));
      %map=100*map;
      %map=s2;

    [D,Si] = perform_fast_marching(map,s1, start_points,end_points,nb_iter_max, options);
    Si(S==-1)=-1;
    S=Si;
    %phi=S;

  %Knew=imfuse(phim,S);
  %imshow(Knew,[]);
  %figure;

      somaIndSecond = find((S<=0));

      intersectionSecond = intersect(somaIndSecond, find(map ~= 0));
      length(intersectionSecond);

      ContourDifference = setdiff(intersectionSecond, intersectionFirst);

      p2 = length(ContourDifference)/length(intersectionFirst);

     %p=abs(p2-p1);

     %p1=p2;

       %Y=[Y p];
        %o=o+1;
     end

    somaIndSecond = find(S<=0);
    intersectionSecond = intersect(somaIndSecond, find(map ~= 0));
    
    S=intersectionSecond;
    
    mask = zeros(512,512);
    mask(S) =1;
    se= strel('disk',THR);
    afterOpening=imopen(mask,se);
    mask=afterOpening;

    CCmask = connComp(mask);
    result{i} = find(mask);

    
    %figure; imshow(mask,[]);colormap('jet');
     %Knew=imfuse(imagecc(:,:,i),mask);
     %Knew=rgb2gray(Knew);
    %figure;imshow(Knew,[]); colormap('jet');
    %tp(i)=numel(find(Knew==255));
    %fp(i)=numel(find(Knew==105));
    %fn(i)=numel(find(Knew==150));
end
 
% tpr=tp./(fn+tp);
% fpr=fp./(fn+tp);
% dc=2*tp./(2*tp+fn+fp);
% 
 soma=result;
 
 mask= zeros(512,512);
 
 for i=1:CC.compNum mask(soma{i})=1; end
 mask(find(detectedSoma))=1;
 
 %figure;imshow(mask,[]);colormap('jet');
 mask=medfilt2(mask,[THR THR]);
 %ave_area=lrngth(find(mask));
 %ave_area=ave_area/CC.compNum
 THR4=500;
CC1 = connComp(mask);
RemainComp1 = cat(1, CC1.compIdx{CC1.compCard > THR4});
mask1 = zeros(size(detectedSoma));
mask1(RemainComp1) = 1;
mask=mask1;


 
 
 %Knew=imfuse(imagec,mask);
 %figure;imshow(Knew,[]); colormap('jet');
 %Knew(end_pointss)=100;
 %figure;imshow(Knew,[]); colormap('jet');
 
end
%%
